#pragma once

#include <Windows.h>
#include <stdio.h>
#include "scanapi.h"

#define ALLOC(X) HeapAlloc(GetProcessHeap(), HEAP_ZERO_MEMORY, X)
#define FREE(X) HeapFree(GetProcessHeap(), 0, X)
#define REALLOC(X, Y) HeapReAlloc(GetProcessHeap(), HEAP_ZERO_MEMORY, X, Y)
#define LICENSE_SIZE 20

// scan.dll
typedef INT(*THREATSCANNER_INITIALIZEEX)(LPWSTR, LPWSTR, LPWSTR, InitializeParams*);
typedef INT(*THREATSCANNER_CREATEINSTANCE)(CThreatScanner**);
typedef INT(*THREATSCANNER_SETINTOPTION)(CThreatScanner*, INT, INT);
typedef INT(*THREATSCANNER_SETSTRINGOPTION)(CThreatScanner*, INT, LPWSTR);
typedef INT(*THREATSCANNER_SETSCANCALLBACK2)(CThreatScanner*, SCAN2_CALLBACK, LPVOID);
typedef INT(*THREATSCANNER_SETENGINESUNLOADCALLBACK)(ENGINES_UNLOAD_CALLBACK, LPVOID);
typedef INT(*THREATSCANNER_SCANPATH)(CThreatScanner*, INT, LPWSTR, INT);
typedef INT(*THREATSCANNER_SCANOBJECT)(CThreatScanner*, INT, LPWSTR, INT, PINT, PINT, LPWSTR*, INT, LPWSTR);
typedef INT(*THREATSCANNER_SCANOBJECTBYHANDLE)(CThreatScanner*, LPVOID, LPWSTR, INT, PINT, PINT, LPWSTR*, INT);
typedef INT(*THREATSCANNER_INITIALIZEMEMORYSCAN)(CThreatScanner*, LPWSTR, ULONG);
typedef INT(*THREATSCANNER_UNINITIALIZEMEMORYSCAN)(CThreatScanner*);
typedef INT(*THREATSCANNER_SCANMEMORYEX)(CThreatScanner*, LPWSTR, INT, ULONG*, INT, PINT, PINT, LPWSTR*);
typedef INT(*THREATSCANNER_SETPASSWORDCALLBACK)(CThreatScanner*, PASSWORD_CALLBACK, LPVOID);
typedef INT(*THREATSCANNER_SETEXTCALLBACK)(CThreatScanner*, EXTSCAN_CALLBACK, LPVOID);
typedef INT(*THREATSCANNER_GETOPTION)(CThreatScanner*, INT, LPVOID);
typedef INT(*THREATSCANNER_GETSCANSTATISTICS)(CThreatScanner*, ScanStatistics**);
typedef INT(*THREATSCANNER_DESTROYINSTANCE)(CThreatScanner*);
typedef INT(*THREATSCANNER_UNINITIALIZE)();